buildscript {
	ext {
		springBootVersion = '2.0.4.RELEASE'
	}
	repositories {
		maven {
			name "BAMS releases"
			credentials {
				username "$bamsUser"
				password "$bamsPassword"
			}
			url "${artifactoryBaseUrl}/libs-release"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.thomsonreuters'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

configurations {
	jaxb
}

repositories {
	maven {
		name "BAMS releases"
		credentials {
			username "$bamsUser"
			password "$bamsPassword"
		}
		url "${artifactoryBaseUrl}/libs-release"
	}
}

// tag::wsdl[]
//task genJaxb {
//	ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
//	ext.classesDir = "${buildDir}/classes/jaxb"
//	ext.schema = "https://det-cre-sat.onesourcetax.com/sabrix/services/taxcalculationservice/2011-09-01/taxcalculationservice?wsdl"
//
//	outputs.dir classesDir
//
//	doLast() {
//		project.ant {
//			taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
//					classpath: configurations.jaxb.asPath
//			mkdir(dir: sourcesDir)
//			mkdir(dir: classesDir)
//
//			xjc(destdir: sourcesDir, schema: schema,
//					package: "com.thomsonreuters.extractvalidator.wsdl") {
//				arg(value: "-wsdl")
//				produces(dir: sourcesDir, includes: "**/*.java")
//			}
//
//			javac(destdir: classesDir, source: 1.8, target: 1.8, debug: true,
//					debugLevel: "lines,vars,source",
//					classpath: configurations.jaxb.asPath) {
//				src(path: sourcesDir)
//				include(name: "**/*.java")
//				include(name: "*.java")
//			}
//
//			copy(todir: classesDir) {
//				fileset(dir: sourcesDir, erroronmissingdir: false) {
//					exclude(name: "**/*.java")
//				}
//			}
//		}
//	}
//}
// end::wsdl[]

dependencies {
	// Spring Boot.
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-web-services')
	compile('org.springframework.ws:spring-ws-security')
	compile('org.apache.ws.security:wss4j:1.6.19')
	compile('javax.json:javax.json-api:1.1.2')

	// Swagger 2.
	compile('io.springfox:springfox-swagger2:2.7.0')
	compile('io.springfox:springfox-swagger-ui:2.7.0')

	// Lombok.
	compile('org.projectlombok:lombok')
	testCompile('org.projectlombok:lombok')

	// Logging.
	compile('org.owasp.esapi:esapi:2.1.0.1')
	compile('log4j:log4j:1.2.17')

	compile 'com.oracle:ojdbc7:12.1.0.2'

	compile('org.springframework.boot:spring-boot-starter-data-jpa')

// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
	testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.3.1.RELEASE'



	testCompile('com.google.code.gson:gson:2.8.6')
	compile('com.google.code.gson:gson:2.8.6')
	testImplementation('org.mockito:mockito-inline:2.13.0')

	implementation 'org.springframework.ws:spring-ws-core'
	// For Java 11:
//	implementation 'org.glassfish.jaxb:jaxb-runtime'
//	compile(files(genJaxb.classesDir).builtBy(genJaxb))
//
//	jaxb "com.sun.xml.bind:jaxb-xjc:2.1.7"

}
