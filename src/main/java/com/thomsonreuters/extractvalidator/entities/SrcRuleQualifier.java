package com.thomsonreuters.extractvalidator.entities;

/**
 * SrcRuleQualifier Description.
 *
 * @author SrinivasanKrishnamurthy
 */


import com.thomsonreuters.extractvalidator.util.ActivityCode;
import lombok.Data;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import java.io.Serializable;
import java.time.LocalDateTime;


@Data
@Entity
@Table(name = "EX_SRC_RULE_QUALIFIERS")
public class SrcRuleQualifier implements Serializable
{
	/**
	 * UID generated by Intellij
	 */
	private static final long serialVersionUID = -8034081822024139791L;

	/**
	 * unique key for rule qualifier
	 */
	@Column(name = "RULE_QUALIFIER_NKEY")
	private Long ruleQualifierNKey;

	/**
	 * Lookup key for rule qualifier.
	 */
	@Column(name = "RULE_QUALIFIER_KEY")
	private String ruleQualifierKey;

	/**
	 * type of rule qualifier
	 */
	@Column(name = "RULE_QUALIFIER_TYPE")
	private String ruleQualifierType;

	/**
	 * indicates element of rule qualifier
	 */
	@Column(name = "ELEMENT")
	private String element;

	/**
	 * indicates operator of rule qualifier
	 */
	@Column(name = "OPERATOR")
	private String operator;

	/**
	 * value of rule qualifier
	 */
	@Column(name = "VALUE")
	private String value;

	/**
	 * value type of rule qualifier
	 */
	@Column(name = "VALUE_TYPE")
	private String valueType;

	/**
	 * element type of rule qualifier
	 */
	@Column(name = "ELEMENT_TYPE")
	private String elementType;

	/**
	 * element value of rule qualifier
	 */
	@Column(name = "ELEMENT_VALUE")
	private String elementValue;

	/**
	 * foreign key to reference list company
	 */
	@Column(name = "REFERENCE_LIST_COMPANY_NKEY")
	private Long referenceListCompanyNKey;

	/**
	 * name of reference list
	 */
	@Column(name = "REFERENCE_LIST_NAME")
	private String referenceListName;

	/**
	 * numeric hash for the authority
	 */
	@Column(name = "AUTHORITY_NKEY")
	private Long authorityNKey;

	/**
	 * date the rule qualifier was added to the database
	 */
	@Column(name = "CREATION_DATE")
	private LocalDateTime creationDate;

	/**
	 * date the rule qualifier was last updated in the database
	 */
	@Column(name = "LAST_UPDATE_DATE")
	private LocalDateTime lastUpdateDate;

	/**
	 * date the rule qualifier becomes effective
	 */
	@Column(name = "START_DATE")
	private LocalDateTime startDate;

	/**
	 * date the rule qualifier becomes ineffective
	 */
	@Column(name = "END_DATE")
	private LocalDateTime endDate;

	/**
	 * foreign key to rule
	 */
	@Column(name = "RULE_NKEY")
	private Long ruleNKey;

	/**
	 * foreign natural key to rule
	 */
	@Column(name = "RULE_KEY")
	private String ruleKey;

	/**
	 * database ID of the rule qualifier
	 */
	@Id
	@Column(name = "RULE_QUALIFIER_ID")
	private Long ruleQualifierId;

	/**
	 * database ID of the batch
	 */
	@Column(name = "BATCH_ID")
	private Long batchId;

	/**
	 * database ID of the previous record
	 */
	@Column(name = "PREVIOUS_RECORD_ID")
	private Long previousRecordId;

	/**
	 * insert (I), update (U), or delete (D) the record
	 */
	@Column(name = "ACTIVITY_CODE")
	private ActivityCode activityCode;
}

